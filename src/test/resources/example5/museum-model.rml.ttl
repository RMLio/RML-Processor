@prefix rr: <http://www.w3.org/ns/r2rml#>.
@prefix  rml: <http://semweb.mmlab.be/ns/rml#> .
@prefix ql: <http://semweb.mmlab.be/ns/ql#> .
@prefix crm: <http://www.cidoc-crm.org/cidoc-crm/> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix ex: <http://example.com/>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.

<#ProductionMapping>
  rml:logicalSource [
    rml:sourceName "museum.json";
    rml:queryLanguage ql:JSONPath;
    rml:iterator "$.[*]";
  ];

  rr:subjectMap [
    rr:template "http://ex.com/Production/{Ref}";
    rr:class crm:E12_Production ;
  ];
  
  rr:predicateObjectMap 
  [
    rr:predicate crm:P82_at_some_time_within;
	rr:objectMap [
            rml:reference "DateOfWork"
        ];
   ];

  rr:predicateObjectMap 
  [
    rr:predicate crm:P14_carried_out_by;
	rr:objectMap [ 
            rr:parentTriplesMap <#ArtistMapping> ;
#            rr:joinCondition [
#                rr:child "Ref";
#                rr:parent "Ref";
#            ];
        ];
    ];

  rr:predicateObjectMap 
  [
    rr:predicate crm:P108_has_produced;
	rr:objectMap [
        rr:parentTriplesMap <#ArtworkMapping>;
#        rr:joinCondition [
#            rr:child "Ref";
#            rr:parent "Ref";
#        ];
    ];
  ].

<#ArtworkMapping>
  rml:logicalSource [
    rml:sourceName "museum.json";
    rml:queryLanguage ql:JSONPath;
    rml:iterator "$.[*]";
  ];

  rr:subjectMap [
    rr:template "http://ex.com/{Ref}";
    rr:class crm:E22_Man-Made_Object 
  ];
      
  rr:predicateObjectMap 
  [
    rr:predicate crm:P102_has_title;
    rr:objectMap 
    [
      rml:reference "Title" 
    ]
  ];
  
  rr:predicateObjectMap 
  [
    rr:predicate crm:P48_has_preferred_identifier;
    rr:objectMap 
    [
      rml:reference "Ref" 
    ]
  ];

  rr:predicateObjectMap 
  [
    rr:predicate crm:P62_depicts;
    rr:objectMap [ 
            rr:parentTriplesMap <#SitterMapping> ;
#            rr:joinCondition [
#                rr:child "Ref";
#                rr:parent "Ref";
#            ];
        ];
  ].
 
<#ArtistMapping>
  rml:logicalSource [
    rml:sourceName "museum.json";
    rml:queryLanguage ql:JSONPath;
    rml:iterator "$";
  ];

  rr:subjectMap [
    rr:template "http://ex.com/{Artist}";
    rr:class crm:E21_Person ;
  ];
  
  rr:predicateObjectMap 
  [
    rr:predicate rdfs:label;
    rr:objectMap 
    [
      rml:reference "Artist" ;
    ]
  ];

  rr:predicateObjectMap 
  [
    rr:predicate crm:P14_carried_out_by;
	rr:objectMap [ 
            rr:parentTriplesMap <#WikipediaExportMapping> ;
            rr:joinCondition [
                rr:child "Artist";
                rr:parent "Name";
            ];
        ];
    ].    


<#SitterMapping>
  rml:logicalSource [
    rml:sourceName "museum.json";
    rml:queryLanguage ql:JSONPath;
    rml:iterator "$";
  ];
  rr:subjectMap [
    rr:template "http://ex.com/{Sitter[0].Name}";
    rr:class crm:E21_Person ;
  ];

  rr:predicateObjectMap 
  [
    rr:predicate rdfs:label;
    rr:objectMap 
    [
      rml:reference "$.Sitter[0].Name" 
    ]
  ].

<#WikipediaExportMapping>
  rml:logicalSource [
    rml:sourceName "moon-walkers.csv";
    rml:queryLanguage ql:CSV;
  ];
  rr:subjectMap [
    rr:template "http://ex.com/{Name}";
    rr:class crm:E21_Person ;
  ];

  rr:predicateObjectMap 
  [
    rr:predicate ex:birthday;
    rr:objectMap 
    [
      rml:reference "Birth Date";
      rr:datatype xsd:date;
    ]
  ];

  rr:predicateObjectMap 
  [
    rr:predicate ex:deathday;
    rr:objectMap 
    [
      rml:reference "Death Date";
      rr:datatype xsd:date; 
    ]
  ];

  rr:predicateObjectMap 
  [
    rr:predicate ex:evaday;
    rr:objectMap 
    [
      rml:reference "EVA Date" ;
      rr:datatype xsd:date;
    ]
  ];

  rr:predicateObjectMap 
  [
    rr:predicate ex:service;
    rr:objectMap 
    [
      rml:reference "Service" 
    ]
  ].